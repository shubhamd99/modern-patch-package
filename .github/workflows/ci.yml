name: Node.js CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
        package-manager: [npm, pnpm]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: ${{ matrix.package-manager }}

      - name: Install pnpm
        if: matrix.package-manager == 'pnpm'
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        if: matrix.package-manager == 'npm'
        run: npm ci

      - name: Install dependencies
        if: matrix.package-manager == 'pnpm'
        run: pnpm install --frozen-lockfile

      - name: Run linter
        if: matrix.package-manager == 'npm'
        run: npm run lint

      - name: Run linter
        if: matrix.package-manager == 'pnpm'
        run: pnpm lint

      - name: Build project
        if: matrix.package-manager == 'npm'
        run: npm run build

      - name: Build project
        if: matrix.package-manager == 'pnpm'
        run: pnpm build

      - name: Run tests
        if: matrix.package-manager == 'npm'
        run: npm test

      - name: Run tests
        if: matrix.package-manager == 'pnpm'
        run: pnpm test

      # Show what will be published to npm (sanity check for dist/ and files field)
      - name: Show npm publish contents
        run: npm pack --dry-run

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
